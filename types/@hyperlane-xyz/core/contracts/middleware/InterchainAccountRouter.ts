/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../../common";

export declare namespace CallLib {
  export type CallStruct = {
    to: BytesLike;
    value: BigNumberish;
    data: BytesLike;
  };

  export type CallStructOutput = [to: string, value: bigint, data: string] & {
    to: string;
    value: bigint;
    data: string;
  };
}

export interface InterchainAccountRouterInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "accountOwners"
      | "callRemote(uint32,address,uint256,bytes)"
      | "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)"
      | "callRemote(uint32,(bytes32,uint256,bytes)[])"
      | "callRemote(uint32,address,uint256,bytes,bytes)"
      | "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])"
      | "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)"
      | "domains"
      | "enrollRemoteRouter"
      | "enrollRemoteRouterAndIsm"
      | "enrollRemoteRouterAndIsms"
      | "enrollRemoteRouters"
      | "getDeployedInterchainAccount(uint32,address,address,address)"
      | "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)"
      | "getLocalInterchainAccount(uint32,address,address,address)"
      | "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"
      | "getRemoteInterchainAccount(uint32,address)"
      | "getRemoteInterchainAccount(address,address,address)"
      | "handle"
      | "hook"
      | "initialize"
      | "interchainSecurityModule"
      | "isms"
      | "localDomain"
      | "mailbox"
      | "owner"
      | "quoteGasPayment(uint32,bytes,uint256)"
      | "quoteGasPayment(uint32)"
      | "renounceOwnership"
      | "routers"
      | "setHook"
      | "setInterchainSecurityModule"
      | "transferOwnership"
      | "unenrollRemoteRouter"
      | "unenrollRemoteRouters"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "Initialized"
      | "InterchainAccountCreated"
      | "OwnershipTransferred"
      | "RemoteCallDispatched"
      | "RemoteIsmEnrolled"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "accountOwners",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "callRemote(uint32,address,uint256,bytes)",
    values: [BigNumberish, AddressLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)",
    values: [BigNumberish, CallLib.CallStruct[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[])",
    values: [BigNumberish, CallLib.CallStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "callRemote(uint32,address,uint256,bytes,bytes)",
    values: [BigNumberish, AddressLike, BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])",
    values: [BigNumberish, BytesLike, BytesLike, CallLib.CallStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)",
    values: [
      BigNumberish,
      BytesLike,
      BytesLike,
      CallLib.CallStruct[],
      BytesLike
    ]
  ): string;
  encodeFunctionData(functionFragment: "domains", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "enrollRemoteRouter",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "enrollRemoteRouterAndIsm",
    values: [BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "enrollRemoteRouterAndIsms",
    values: [BigNumberish[], BytesLike[], BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "enrollRemoteRouters",
    values: [BigNumberish[], BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getDeployedInterchainAccount(uint32,address,address,address)",
    values: [BigNumberish, AddressLike, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)",
    values: [BigNumberish, BytesLike, BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getLocalInterchainAccount(uint32,address,address,address)",
    values: [BigNumberish, AddressLike, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getLocalInterchainAccount(uint32,bytes32,bytes32,address)",
    values: [BigNumberish, BytesLike, BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRemoteInterchainAccount(uint32,address)",
    values: [BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRemoteInterchainAccount(address,address,address)",
    values: [AddressLike, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "handle",
    values: [BigNumberish, BytesLike, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "hook", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "interchainSecurityModule",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "isms", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "localDomain",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "mailbox", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "quoteGasPayment(uint32,bytes,uint256)",
    values: [BigNumberish, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "quoteGasPayment(uint32)",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "routers",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setHook",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setInterchainSecurityModule",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unenrollRemoteRouter",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unenrollRemoteRouters",
    values: [BigNumberish[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "accountOwners",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "callRemote(uint32,address,uint256,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "callRemote(uint32,(bytes32,uint256,bytes)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "callRemote(uint32,address,uint256,bytes,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "domains", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "enrollRemoteRouter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enrollRemoteRouterAndIsm",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enrollRemoteRouterAndIsms",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "enrollRemoteRouters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDeployedInterchainAccount(uint32,address,address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLocalInterchainAccount(uint32,address,address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLocalInterchainAccount(uint32,bytes32,bytes32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRemoteInterchainAccount(uint32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRemoteInterchainAccount(address,address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "handle", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hook", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "interchainSecurityModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isms", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "localDomain",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mailbox", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "quoteGasPayment(uint32,bytes,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "quoteGasPayment(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "routers", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setHook", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setInterchainSecurityModule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unenrollRemoteRouter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unenrollRemoteRouters",
    data: BytesLike
  ): Result;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InterchainAccountCreatedEvent {
  export type InputTuple = [
    origin: BigNumberish,
    owner: BytesLike,
    ism: AddressLike,
    account: AddressLike
  ];
  export type OutputTuple = [
    origin: bigint,
    owner: string,
    ism: string,
    account: string
  ];
  export interface OutputObject {
    origin: bigint;
    owner: string;
    ism: string;
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RemoteCallDispatchedEvent {
  export type InputTuple = [
    destination: BigNumberish,
    owner: AddressLike,
    router: BytesLike,
    ism: BytesLike
  ];
  export type OutputTuple = [
    destination: bigint,
    owner: string,
    router: string,
    ism: string
  ];
  export interface OutputObject {
    destination: bigint;
    owner: string;
    router: string;
    ism: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RemoteIsmEnrolledEvent {
  export type InputTuple = [domain: BigNumberish, ism: BytesLike];
  export type OutputTuple = [domain: bigint, ism: string];
  export interface OutputObject {
    domain: bigint;
    ism: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface InterchainAccountRouter extends BaseContract {
  connect(runner?: ContractRunner | null): InterchainAccountRouter;
  waitForDeployment(): Promise<this>;

  interface: InterchainAccountRouterInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  accountOwners: TypedContractMethod<
    [arg0: AddressLike],
    [[bigint, string] & { origin: bigint; owner: string }],
    "view"
  >;

  "callRemote(uint32,address,uint256,bytes)": TypedContractMethod<
    [
      _destination: BigNumberish,
      _to: AddressLike,
      _value: BigNumberish,
      _data: BytesLike
    ],
    [string],
    "payable"
  >;

  "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)": TypedContractMethod<
    [
      _destination: BigNumberish,
      _calls: CallLib.CallStruct[],
      _hookMetadata: BytesLike
    ],
    [string],
    "payable"
  >;

  "callRemote(uint32,(bytes32,uint256,bytes)[])": TypedContractMethod<
    [_destination: BigNumberish, _calls: CallLib.CallStruct[]],
    [string],
    "payable"
  >;

  "callRemote(uint32,address,uint256,bytes,bytes)": TypedContractMethod<
    [
      _destination: BigNumberish,
      _to: AddressLike,
      _value: BigNumberish,
      _data: BytesLike,
      _hookMetadata: BytesLike
    ],
    [string],
    "payable"
  >;

  "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])": TypedContractMethod<
    [
      _destination: BigNumberish,
      _router: BytesLike,
      _ism: BytesLike,
      _calls: CallLib.CallStruct[]
    ],
    [string],
    "payable"
  >;

  "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)": TypedContractMethod<
    [
      _destination: BigNumberish,
      _router: BytesLike,
      _ism: BytesLike,
      _calls: CallLib.CallStruct[],
      _hookMetadata: BytesLike
    ],
    [string],
    "payable"
  >;

  domains: TypedContractMethod<[], [bigint[]], "view">;

  enrollRemoteRouter: TypedContractMethod<
    [_domain: BigNumberish, _router: BytesLike],
    [void],
    "nonpayable"
  >;

  enrollRemoteRouterAndIsm: TypedContractMethod<
    [_destination: BigNumberish, _router: BytesLike, _ism: BytesLike],
    [void],
    "nonpayable"
  >;

  enrollRemoteRouterAndIsms: TypedContractMethod<
    [_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[]],
    [void],
    "nonpayable"
  >;

  enrollRemoteRouters: TypedContractMethod<
    [_domains: BigNumberish[], _addresses: BytesLike[]],
    [void],
    "nonpayable"
  >;

  "getDeployedInterchainAccount(uint32,address,address,address)": TypedContractMethod<
    [
      _origin: BigNumberish,
      _owner: AddressLike,
      _router: AddressLike,
      _ism: AddressLike
    ],
    [string],
    "nonpayable"
  >;

  "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)": TypedContractMethod<
    [
      _origin: BigNumberish,
      _owner: BytesLike,
      _router: BytesLike,
      _ism: AddressLike
    ],
    [string],
    "nonpayable"
  >;

  "getLocalInterchainAccount(uint32,address,address,address)": TypedContractMethod<
    [
      _origin: BigNumberish,
      _owner: AddressLike,
      _router: AddressLike,
      _ism: AddressLike
    ],
    [string],
    "view"
  >;

  "getLocalInterchainAccount(uint32,bytes32,bytes32,address)": TypedContractMethod<
    [
      _origin: BigNumberish,
      _owner: BytesLike,
      _router: BytesLike,
      _ism: AddressLike
    ],
    [string],
    "view"
  >;

  "getRemoteInterchainAccount(uint32,address)": TypedContractMethod<
    [_destination: BigNumberish, _owner: AddressLike],
    [string],
    "view"
  >;

  "getRemoteInterchainAccount(address,address,address)": TypedContractMethod<
    [_owner: AddressLike, _router: AddressLike, _ism: AddressLike],
    [string],
    "view"
  >;

  handle: TypedContractMethod<
    [_origin: BigNumberish, _sender: BytesLike, _message: BytesLike],
    [void],
    "payable"
  >;

  hook: TypedContractMethod<[], [string], "view">;

  initialize: TypedContractMethod<
    [
      _customHook: AddressLike,
      _interchainSecurityModule: AddressLike,
      _owner: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  interchainSecurityModule: TypedContractMethod<[], [string], "view">;

  isms: TypedContractMethod<[arg0: BigNumberish], [string], "view">;

  localDomain: TypedContractMethod<[], [bigint], "view">;

  mailbox: TypedContractMethod<[], [string], "view">;

  owner: TypedContractMethod<[], [string], "view">;

  "quoteGasPayment(uint32,bytes,uint256)": TypedContractMethod<
    [
      _destination: BigNumberish,
      _messageBody: BytesLike,
      gasLimit: BigNumberish
    ],
    [bigint],
    "view"
  >;

  "quoteGasPayment(uint32)": TypedContractMethod<
    [_destination: BigNumberish],
    [bigint],
    "view"
  >;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  routers: TypedContractMethod<[_domain: BigNumberish], [string], "view">;

  setHook: TypedContractMethod<[_hook: AddressLike], [void], "nonpayable">;

  setInterchainSecurityModule: TypedContractMethod<
    [_module: AddressLike],
    [void],
    "nonpayable"
  >;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  unenrollRemoteRouter: TypedContractMethod<
    [_domain: BigNumberish],
    [void],
    "nonpayable"
  >;

  unenrollRemoteRouters: TypedContractMethod<
    [_domains: BigNumberish[]],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "accountOwners"
  ): TypedContractMethod<
    [arg0: AddressLike],
    [[bigint, string] & { origin: bigint; owner: string }],
    "view"
  >;
  getFunction(
    nameOrSignature: "callRemote(uint32,address,uint256,bytes)"
  ): TypedContractMethod<
    [
      _destination: BigNumberish,
      _to: AddressLike,
      _value: BigNumberish,
      _data: BytesLike
    ],
    [string],
    "payable"
  >;
  getFunction(
    nameOrSignature: "callRemote(uint32,(bytes32,uint256,bytes)[],bytes)"
  ): TypedContractMethod<
    [
      _destination: BigNumberish,
      _calls: CallLib.CallStruct[],
      _hookMetadata: BytesLike
    ],
    [string],
    "payable"
  >;
  getFunction(
    nameOrSignature: "callRemote(uint32,(bytes32,uint256,bytes)[])"
  ): TypedContractMethod<
    [_destination: BigNumberish, _calls: CallLib.CallStruct[]],
    [string],
    "payable"
  >;
  getFunction(
    nameOrSignature: "callRemote(uint32,address,uint256,bytes,bytes)"
  ): TypedContractMethod<
    [
      _destination: BigNumberish,
      _to: AddressLike,
      _value: BigNumberish,
      _data: BytesLike,
      _hookMetadata: BytesLike
    ],
    [string],
    "payable"
  >;
  getFunction(
    nameOrSignature: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[])"
  ): TypedContractMethod<
    [
      _destination: BigNumberish,
      _router: BytesLike,
      _ism: BytesLike,
      _calls: CallLib.CallStruct[]
    ],
    [string],
    "payable"
  >;
  getFunction(
    nameOrSignature: "callRemoteWithOverrides(uint32,bytes32,bytes32,(bytes32,uint256,bytes)[],bytes)"
  ): TypedContractMethod<
    [
      _destination: BigNumberish,
      _router: BytesLike,
      _ism: BytesLike,
      _calls: CallLib.CallStruct[],
      _hookMetadata: BytesLike
    ],
    [string],
    "payable"
  >;
  getFunction(
    nameOrSignature: "domains"
  ): TypedContractMethod<[], [bigint[]], "view">;
  getFunction(
    nameOrSignature: "enrollRemoteRouter"
  ): TypedContractMethod<
    [_domain: BigNumberish, _router: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "enrollRemoteRouterAndIsm"
  ): TypedContractMethod<
    [_destination: BigNumberish, _router: BytesLike, _ism: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "enrollRemoteRouterAndIsms"
  ): TypedContractMethod<
    [_destinations: BigNumberish[], _routers: BytesLike[], _isms: BytesLike[]],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "enrollRemoteRouters"
  ): TypedContractMethod<
    [_domains: BigNumberish[], _addresses: BytesLike[]],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "getDeployedInterchainAccount(uint32,address,address,address)"
  ): TypedContractMethod<
    [
      _origin: BigNumberish,
      _owner: AddressLike,
      _router: AddressLike,
      _ism: AddressLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "getDeployedInterchainAccount(uint32,bytes32,bytes32,address)"
  ): TypedContractMethod<
    [
      _origin: BigNumberish,
      _owner: BytesLike,
      _router: BytesLike,
      _ism: AddressLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "getLocalInterchainAccount(uint32,address,address,address)"
  ): TypedContractMethod<
    [
      _origin: BigNumberish,
      _owner: AddressLike,
      _router: AddressLike,
      _ism: AddressLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getLocalInterchainAccount(uint32,bytes32,bytes32,address)"
  ): TypedContractMethod<
    [
      _origin: BigNumberish,
      _owner: BytesLike,
      _router: BytesLike,
      _ism: AddressLike
    ],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRemoteInterchainAccount(uint32,address)"
  ): TypedContractMethod<
    [_destination: BigNumberish, _owner: AddressLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRemoteInterchainAccount(address,address,address)"
  ): TypedContractMethod<
    [_owner: AddressLike, _router: AddressLike, _ism: AddressLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "handle"
  ): TypedContractMethod<
    [_origin: BigNumberish, _sender: BytesLike, _message: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "hook"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<
    [
      _customHook: AddressLike,
      _interchainSecurityModule: AddressLike,
      _owner: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "interchainSecurityModule"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "isms"
  ): TypedContractMethod<[arg0: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "localDomain"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "mailbox"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "quoteGasPayment(uint32,bytes,uint256)"
  ): TypedContractMethod<
    [
      _destination: BigNumberish,
      _messageBody: BytesLike,
      gasLimit: BigNumberish
    ],
    [bigint],
    "view"
  >;
  getFunction(
    nameOrSignature: "quoteGasPayment(uint32)"
  ): TypedContractMethod<[_destination: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "renounceOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "routers"
  ): TypedContractMethod<[_domain: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "setHook"
  ): TypedContractMethod<[_hook: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setInterchainSecurityModule"
  ): TypedContractMethod<[_module: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "transferOwnership"
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unenrollRemoteRouter"
  ): TypedContractMethod<[_domain: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unenrollRemoteRouters"
  ): TypedContractMethod<[_domains: BigNumberish[]], [void], "nonpayable">;

  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "InterchainAccountCreated"
  ): TypedContractEvent<
    InterchainAccountCreatedEvent.InputTuple,
    InterchainAccountCreatedEvent.OutputTuple,
    InterchainAccountCreatedEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred"
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;
  getEvent(
    key: "RemoteCallDispatched"
  ): TypedContractEvent<
    RemoteCallDispatchedEvent.InputTuple,
    RemoteCallDispatchedEvent.OutputTuple,
    RemoteCallDispatchedEvent.OutputObject
  >;
  getEvent(
    key: "RemoteIsmEnrolled"
  ): TypedContractEvent<
    RemoteIsmEnrolledEvent.InputTuple,
    RemoteIsmEnrolledEvent.OutputTuple,
    RemoteIsmEnrolledEvent.OutputObject
  >;

  filters: {
    "Initialized(uint8)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "InterchainAccountCreated(uint32,bytes32,address,address)": TypedContractEvent<
      InterchainAccountCreatedEvent.InputTuple,
      InterchainAccountCreatedEvent.OutputTuple,
      InterchainAccountCreatedEvent.OutputObject
    >;
    InterchainAccountCreated: TypedContractEvent<
      InterchainAccountCreatedEvent.InputTuple,
      InterchainAccountCreatedEvent.OutputTuple,
      InterchainAccountCreatedEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;

    "RemoteCallDispatched(uint32,address,bytes32,bytes32)": TypedContractEvent<
      RemoteCallDispatchedEvent.InputTuple,
      RemoteCallDispatchedEvent.OutputTuple,
      RemoteCallDispatchedEvent.OutputObject
    >;
    RemoteCallDispatched: TypedContractEvent<
      RemoteCallDispatchedEvent.InputTuple,
      RemoteCallDispatchedEvent.OutputTuple,
      RemoteCallDispatchedEvent.OutputObject
    >;

    "RemoteIsmEnrolled(uint32,bytes32)": TypedContractEvent<
      RemoteIsmEnrolledEvent.InputTuple,
      RemoteIsmEnrolledEvent.OutputTuple,
      RemoteIsmEnrolledEvent.OutputObject
    >;
    RemoteIsmEnrolled: TypedContractEvent<
      RemoteIsmEnrolledEvent.InputTuple,
      RemoteIsmEnrolledEvent.OutputTuple,
      RemoteIsmEnrolledEvent.OutputObject
    >;
  };
}
